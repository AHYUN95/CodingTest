- Dynamic Programming

    문제를 작은 문제로 쪼개서 풀어나감, 반복되는 호출을 줄이는 방법
    >> 방법 두개 (재귀(Top-Down), 반복문(Bottom-Up)
    >> 재귀 + **Memoization (이미 있는 값을 재활용)


- Greedy Algorithm

    단게별로 최적의 선택을 하는 것 >> 항상 최적의 해를 도출해내는 것은 아니다.
    활용 가능 문제 특징
    1) 이전의 탐욕 선택이 이후의 선택에 영향을 주지 않는다. (독립적
    2) 전체 최적해가 부분 문제에 대해서도 최적해를 만족한다.
    >> DP에 비해 근사 해 구하는 속도 빠름
    >> 위의 조건 맞추어서 DP+GREEDY (분기점을 둬서)
    
    대표문제 : 거스름돈 문제, 활동 선택, 최소 신장 트리 문제 등


